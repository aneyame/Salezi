{
	"info": {
		"_postman_id": "a9e3ba1b-e651-4b4a-9dc2-6cd550040961",
		"name": "Salezi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30710894",
		"_collection_link": "https://orange-sunset-596292.postman.co/workspace/salezi-w-anna~1088126f-9207-4e1d-9777-3cebcd9e7271/collection/30710894-a9e3ba1b-e651-4b4a-9dc2-6cd550040961?action=share&source=collection_link&creator=30710894"
	},
	"item": [
		{
			"name": "Books",
			"item": [
				{
					"name": "Get all Books",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Books {\n    books {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Author\n                Quantity\n                Type\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/books",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateBook {\n    createBook(\n        data: {\n            Name: \"TEST\"\n            Price: 10\n            Author: \"Neale Donald Walsh\"\n            Quantity: 120\n            Type: Essai\n        }\n    ) {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Author\n                Quantity\n                Type\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Book {\n    book(id: \"4\") {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Author\n                Quantity\n                Type\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/books/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"books",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateBook {\n    updateBook(id: \"16\", data: { Quantity: 131 }) {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Author\n                Quantity\n                Type\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a book ",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteBook {\n    deleteBook(id: 14) {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Author\n                Quantity\n                Type\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/books/14",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"books",
								"14"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CDs",
			"item": [
				{
					"name": "GET all Cds",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Cds {\n    cds {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Artist\n                Quantity\n                Style\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/cds",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"cds"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post a CD",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateCd {\n    createCd(\n        data: {\n            Name: \"Skins\"\n            Price: 10\n            Artist: \"XXXTentacion\"\n            Quantity: 10\n            Style: Rap\n        }\n    ) {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Artist\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n                Style\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CD by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Cd {\n    cd(id: \"2\") {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Artist\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/cds/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"cds",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a CD",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateCd {\n    updateCd(id: \"3\", data: { Quantity: 12 }) {\n        data {\n            id\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a CD",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteCd {\n    deleteCd(id: \"18\") {\n        data {\n            id\n            attributes {\n                Name\n                Price\n                Artist\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Electronics",
			"item": [
				{
					"name": "Get Electronics",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Electronics {\n    electronics {\n        data {\n            id\n            attributes {\n                Name\n                Brand\n                Price\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/electronics",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"electronics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post an Electronic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateElectronic {\n    createElectronic(\n        data: { Name: \"Macbook Pro M2\", Brand: \"Apple\", Price: 3000, Quantity: 10 }\n    ) {\n        data {\n            id\n            attributes {\n                Name\n                Brand\n                Price\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Electronic by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Electronic {\n    electronic(id: \"2\") {\n        data {\n            id\n            attributes {\n                Name\n                Brand\n                Price\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/electronics/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"electronics",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an Electronic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateElectronic {\n    updateElectronic(id: \"1\", data: { Quantity: 21 }) {\n        data {\n            id\n            attributes {\n                Name\n                Brand\n                Price\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Electronic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "dd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteElectronic {\n    deleteElectronic(id: \"9\") {\n        data {\n            id\n            attributes {\n                Name\n                Brand\n                Price\n                Quantity\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:1337/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tokens",
			"item": [],
			"description": "**Seller token** :  \ndd06ac0e6586dd372a6b708b75335b988ef1089b528c540bfe63ff2583479aebf505f1f5f6b1c87d9d987c5cdef792dd4e48e9cd6f47c72b995015e2420177c981200bba4ba27ab99edef8075ceb1587e8f13e585b6a586ab89435ee48cc1a7f3490d4d203a04c400f9b4cff169a68a98d23847cf27f82431787113249416fc6  \n.\n\n**Super Admin token** :  \n34c7257e93f02be8ae13b1095041214286b043cec411d29ff9ddfdbd662cf6e5c6dff9f06d600915694f83a76314884a3a8ab0cb0a51b73a85535d2faf548c2ec8fc3323eaad603389a3cd56d1a8db881841f6a63c4810ff33021f40e028aa17d981514e5e1382b978673ef46c131069cd338dd6613b4e0b16db9d2e8bcf9487  \n.\n\n**Fnac manager token** :  \n8bc88d34c856152bb8faad9ac13c3b9e37fe30f90b0bd0acdae093a8f34435ae9f821ff3edf1cc499c351aeb6b50f93c8e8fbb60ce804faf7afd208868a5f588bc02c648516a349897214d4ec3b2f69e9f01acf0e434dd0af252d4df9f6d2659a0a150be68f51094cf6dc17686f12bbc827d49598d4a7bb1a45b1e1b8e79fdbf"
		}
	]
}